#!/usr/bin/env bash
#shellcheck disable=SC2027,SC2046,SC2154
###############################################################################%
INSTALL_DIR="$(dirname "${0}")"
DOTDIR="${INSTALL_DIR}/.."

mk_dirs_from_file() {
    cat "${1}" | while read -r line; do
        mkdir -p "${HOME}${line}"
    done
}

replace_dotfiles() {
    for f in "${DOTDIR}"/*; do
	    if [[ ! -d "${f}" ]]; then
		    [[ -e "${HOME}/.${f}" ]] && \
            mv "${HOME}/.${f}" "${INSTALL_DIR}/backup/${f}"
            ln -s "${DOTDIR}/${f}" "${HOME}/.${f}"
	    fi
    done
}

install_docker() {
    for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do
        apt-get remove $pkg
    done
    # Add Docker's official GPG key
    apt-get update
    apt-get install -y ca-certificates curl gnupg
    install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    chmod a+r /etc/apt/keyrings/docker.gpg
    # Add the repository to Apt sources
    echo \
    "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
    "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
    tee /etc/apt/sources.list.d/docker.list > /dev/null
    apt-get update
    apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
}

apt_uu() {
    apt-get update
    apt-get upgrade -y
}

apt_install_from_file() {
    cat "${1}" | while read -r line; do
        apt-get install -y "${line}"
    done
}

# Make directories
mk_dirs_from_file "${INSTALL_DIR}/dirs.lst"

# Make symlinks
replace_dotfiles

# Install packages
apt_uu
apt_install_from_file "${INSTALL_DIR}/pkgs.lst"
install_docker
