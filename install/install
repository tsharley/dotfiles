#!/usr/bin/env bash
#shellcheck disable=SC2027,SC2046,SC2154,SC2164,SC2103
###############################################################################%

require_docker=1

INSTALL_DIR="$(dirname "${0}")"
cd "$INSTALL_DIR"; cd ..
DOTDIR="$(pwd)"


success() { echo -en "\033[38;5;30;1m"; echo -en "$1"; echo -e  "\033[0m"; }

mk_dirs_from_file() {
    cat "${1}" | while read -r line; do
        mkdir -p "${HOME}/${line}"
    done
}


replace_dotfiles() {
    for f in "${DOTDIR}"/*; do
        if [[ ! -d "${f}" ]]; then
            file="$(basename "$f")"
            if [[ -f "${HOME}/.${file}" ]]; then
                mv "${HOME}/.${file}" "install/backup/"
            fi
            if [[ -h "${HOME}/.${file}" ]]; then
                unlink "${HOME}/.${file}"
            fi
            ln -sf "${DOTDIR}/${file}" "${HOME}/.${file}"
        fi
    done

}


link_bin() {
    for f in "${DOTDIR}/bin/"*; do
        if [[ ! -d "${f}" ]]; then
            file="$(basename "$f")"
            if [[ -f "${HOME}/.local/bin/${file}" ]]; then
                mv "${HOME}/.local/bin/${file}" "install/backup/"
            fi
            if [[ -h "${HOME}/.local/bin/${file}" ]]; then
                unlink "${HOME}/.local/bin/${file}"
            fi
            ln -sf "${DOTDIR}/bin/${file}" "${HOME}/.local/bin/${file}"
        fi
    done
}

# install_docker() {
#     if [[ ! $(docker compose version) ]]; then
#     	for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do
#     	    apt-get remove $pkg
#     	done
#     	# Add Docker's official GPG key
#     	apt-get update
#     	apt-get install -y ca-certificates curl gnupg
#     	install -m 0755 -d /etc/apt/keyrings
#     	curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
#     	chmod a+r /etc/apt/keyrings/docker.gpg
#     	# Add the repository to Apt sources
#     	echo \
#     	"deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
#     	"$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
#     	tee /etc/apt/sources.list.d/docker.list > /dev/null
#     	apt-get update
#     	apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
#     fi
# }

apt_uu() {
    apt-get update
    apt-get upgrade -y
}

apt_install_from_file() {
    cat "${1}" | while read -r line; do
        apt-get install -y "${line}"
    done
}

apt_install_eza() {
	cd $DOTDIR
	./install/install_eza
	cd -
}

prep_sshd_config() {
	sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/g' /etc/ssh/sshd_config
	sed -i 's/#StrictModes yes/StrictModes no/g' /etc/ssh/sshd_config
	systemctl restart sshd
}

# set -xv
# Make directories
mk_dirs_from_file "install/dirs.lst"

# Make symlinks
replace_dotfiles
success "Dotfiles linked to HOME"
link_bin
success "Binaries linked to '~/.local/bin'"
# set +xv
prep_sshd_config
# Install packages
cd "$DOTDIR"
apt_uu
apt_install_from_file "install/pkgs.lst"
apt_install_eza

if [[ $require_docker == 1 ]]; then
    cd "$DOTDIR"
    install/install_docker && success "Docker installed"
    echo
fi

success "Setup complete"
echo
